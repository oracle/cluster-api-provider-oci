// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/aribandy/work/src/sigs.k8s.io/cluster-api-provider-oci/cloud/services/vcn/client.go

// Package mock_vcn is a generated GoMock package.
package mock_vcn

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/oracle/oci-go-sdk/v63/core"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// AddNetworkSecurityGroupSecurityRules mocks base method.
func (m *MockClient) AddNetworkSecurityGroupSecurityRules(ctx context.Context, request core.AddNetworkSecurityGroupSecurityRulesRequest) (core.AddNetworkSecurityGroupSecurityRulesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNetworkSecurityGroupSecurityRules", ctx, request)
	ret0, _ := ret[0].(core.AddNetworkSecurityGroupSecurityRulesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNetworkSecurityGroupSecurityRules indicates an expected call of AddNetworkSecurityGroupSecurityRules.
func (mr *MockClientMockRecorder) AddNetworkSecurityGroupSecurityRules(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNetworkSecurityGroupSecurityRules", reflect.TypeOf((*MockClient)(nil).AddNetworkSecurityGroupSecurityRules), ctx, request)
}

// CreateInternetGateway mocks base method.
func (m *MockClient) CreateInternetGateway(ctx context.Context, request core.CreateInternetGatewayRequest) (core.CreateInternetGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateInternetGateway", ctx, request)
	ret0, _ := ret[0].(core.CreateInternetGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateInternetGateway indicates an expected call of CreateInternetGateway.
func (mr *MockClientMockRecorder) CreateInternetGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateInternetGateway", reflect.TypeOf((*MockClient)(nil).CreateInternetGateway), ctx, request)
}

// CreateNatGateway mocks base method.
func (m *MockClient) CreateNatGateway(ctx context.Context, request core.CreateNatGatewayRequest) (core.CreateNatGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNatGateway", ctx, request)
	ret0, _ := ret[0].(core.CreateNatGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNatGateway indicates an expected call of CreateNatGateway.
func (mr *MockClientMockRecorder) CreateNatGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNatGateway", reflect.TypeOf((*MockClient)(nil).CreateNatGateway), ctx, request)
}

// CreateNetworkSecurityGroup mocks base method.
func (m *MockClient) CreateNetworkSecurityGroup(ctx context.Context, request core.CreateNetworkSecurityGroupRequest) (core.CreateNetworkSecurityGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNetworkSecurityGroup", ctx, request)
	ret0, _ := ret[0].(core.CreateNetworkSecurityGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNetworkSecurityGroup indicates an expected call of CreateNetworkSecurityGroup.
func (mr *MockClientMockRecorder) CreateNetworkSecurityGroup(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNetworkSecurityGroup", reflect.TypeOf((*MockClient)(nil).CreateNetworkSecurityGroup), ctx, request)
}

// CreateRouteTable mocks base method.
func (m *MockClient) CreateRouteTable(ctx context.Context, request core.CreateRouteTableRequest) (core.CreateRouteTableResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRouteTable", ctx, request)
	ret0, _ := ret[0].(core.CreateRouteTableResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRouteTable indicates an expected call of CreateRouteTable.
func (mr *MockClientMockRecorder) CreateRouteTable(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRouteTable", reflect.TypeOf((*MockClient)(nil).CreateRouteTable), ctx, request)
}

// CreateSecurityList mocks base method.
func (m *MockClient) CreateSecurityList(ctx context.Context, request core.CreateSecurityListRequest) (core.CreateSecurityListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSecurityList", ctx, request)
	ret0, _ := ret[0].(core.CreateSecurityListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSecurityList indicates an expected call of CreateSecurityList.
func (mr *MockClientMockRecorder) CreateSecurityList(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSecurityList", reflect.TypeOf((*MockClient)(nil).CreateSecurityList), ctx, request)
}

// CreateServiceGateway mocks base method.
func (m *MockClient) CreateServiceGateway(ctx context.Context, request core.CreateServiceGatewayRequest) (core.CreateServiceGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateServiceGateway", ctx, request)
	ret0, _ := ret[0].(core.CreateServiceGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateServiceGateway indicates an expected call of CreateServiceGateway.
func (mr *MockClientMockRecorder) CreateServiceGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateServiceGateway", reflect.TypeOf((*MockClient)(nil).CreateServiceGateway), ctx, request)
}

// CreateSubnet mocks base method.
func (m *MockClient) CreateSubnet(ctx context.Context, request core.CreateSubnetRequest) (core.CreateSubnetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSubnet", ctx, request)
	ret0, _ := ret[0].(core.CreateSubnetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSubnet indicates an expected call of CreateSubnet.
func (mr *MockClientMockRecorder) CreateSubnet(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSubnet", reflect.TypeOf((*MockClient)(nil).CreateSubnet), ctx, request)
}

// CreateVcn mocks base method.
func (m *MockClient) CreateVcn(ctx context.Context, request core.CreateVcnRequest) (core.CreateVcnResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVcn", ctx, request)
	ret0, _ := ret[0].(core.CreateVcnResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVcn indicates an expected call of CreateVcn.
func (mr *MockClientMockRecorder) CreateVcn(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVcn", reflect.TypeOf((*MockClient)(nil).CreateVcn), ctx, request)
}

// DeleteInternetGateway mocks base method.
func (m *MockClient) DeleteInternetGateway(ctx context.Context, request core.DeleteInternetGatewayRequest) (core.DeleteInternetGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteInternetGateway", ctx, request)
	ret0, _ := ret[0].(core.DeleteInternetGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteInternetGateway indicates an expected call of DeleteInternetGateway.
func (mr *MockClientMockRecorder) DeleteInternetGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteInternetGateway", reflect.TypeOf((*MockClient)(nil).DeleteInternetGateway), ctx, request)
}

// DeleteNatGateway mocks base method.
func (m *MockClient) DeleteNatGateway(ctx context.Context, request core.DeleteNatGatewayRequest) (core.DeleteNatGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNatGateway", ctx, request)
	ret0, _ := ret[0].(core.DeleteNatGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNatGateway indicates an expected call of DeleteNatGateway.
func (mr *MockClientMockRecorder) DeleteNatGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNatGateway", reflect.TypeOf((*MockClient)(nil).DeleteNatGateway), ctx, request)
}

// DeleteNetworkSecurityGroup mocks base method.
func (m *MockClient) DeleteNetworkSecurityGroup(ctx context.Context, request core.DeleteNetworkSecurityGroupRequest) (core.DeleteNetworkSecurityGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkSecurityGroup", ctx, request)
	ret0, _ := ret[0].(core.DeleteNetworkSecurityGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNetworkSecurityGroup indicates an expected call of DeleteNetworkSecurityGroup.
func (mr *MockClientMockRecorder) DeleteNetworkSecurityGroup(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkSecurityGroup", reflect.TypeOf((*MockClient)(nil).DeleteNetworkSecurityGroup), ctx, request)
}

// DeleteRouteTable mocks base method.
func (m *MockClient) DeleteRouteTable(ctx context.Context, request core.DeleteRouteTableRequest) (core.DeleteRouteTableResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRouteTable", ctx, request)
	ret0, _ := ret[0].(core.DeleteRouteTableResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRouteTable indicates an expected call of DeleteRouteTable.
func (mr *MockClientMockRecorder) DeleteRouteTable(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRouteTable", reflect.TypeOf((*MockClient)(nil).DeleteRouteTable), ctx, request)
}

// DeleteSecurityList mocks base method.
func (m *MockClient) DeleteSecurityList(ctx context.Context, request core.DeleteSecurityListRequest) (core.DeleteSecurityListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecurityList", ctx, request)
	ret0, _ := ret[0].(core.DeleteSecurityListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSecurityList indicates an expected call of DeleteSecurityList.
func (mr *MockClientMockRecorder) DeleteSecurityList(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecurityList", reflect.TypeOf((*MockClient)(nil).DeleteSecurityList), ctx, request)
}

// DeleteServiceGateway mocks base method.
func (m *MockClient) DeleteServiceGateway(ctx context.Context, request core.DeleteServiceGatewayRequest) (core.DeleteServiceGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteServiceGateway", ctx, request)
	ret0, _ := ret[0].(core.DeleteServiceGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteServiceGateway indicates an expected call of DeleteServiceGateway.
func (mr *MockClientMockRecorder) DeleteServiceGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServiceGateway", reflect.TypeOf((*MockClient)(nil).DeleteServiceGateway), ctx, request)
}

// DeleteSubnet mocks base method.
func (m *MockClient) DeleteSubnet(ctx context.Context, request core.DeleteSubnetRequest) (core.DeleteSubnetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSubnet", ctx, request)
	ret0, _ := ret[0].(core.DeleteSubnetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSubnet indicates an expected call of DeleteSubnet.
func (mr *MockClientMockRecorder) DeleteSubnet(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSubnet", reflect.TypeOf((*MockClient)(nil).DeleteSubnet), ctx, request)
}

// DeleteVcn mocks base method.
func (m *MockClient) DeleteVcn(ctx context.Context, request core.DeleteVcnRequest) (core.DeleteVcnResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVcn", ctx, request)
	ret0, _ := ret[0].(core.DeleteVcnResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteVcn indicates an expected call of DeleteVcn.
func (mr *MockClientMockRecorder) DeleteVcn(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVcn", reflect.TypeOf((*MockClient)(nil).DeleteVcn), ctx, request)
}

// GetInternetGateway mocks base method.
func (m *MockClient) GetInternetGateway(ctx context.Context, request core.GetInternetGatewayRequest) (core.GetInternetGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInternetGateway", ctx, request)
	ret0, _ := ret[0].(core.GetInternetGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInternetGateway indicates an expected call of GetInternetGateway.
func (mr *MockClientMockRecorder) GetInternetGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInternetGateway", reflect.TypeOf((*MockClient)(nil).GetInternetGateway), ctx, request)
}

// GetNatGateway mocks base method.
func (m *MockClient) GetNatGateway(ctx context.Context, request core.GetNatGatewayRequest) (core.GetNatGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNatGateway", ctx, request)
	ret0, _ := ret[0].(core.GetNatGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNatGateway indicates an expected call of GetNatGateway.
func (mr *MockClientMockRecorder) GetNatGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNatGateway", reflect.TypeOf((*MockClient)(nil).GetNatGateway), ctx, request)
}

// GetNetworkSecurityGroup mocks base method.
func (m *MockClient) GetNetworkSecurityGroup(ctx context.Context, request core.GetNetworkSecurityGroupRequest) (core.GetNetworkSecurityGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkSecurityGroup", ctx, request)
	ret0, _ := ret[0].(core.GetNetworkSecurityGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkSecurityGroup indicates an expected call of GetNetworkSecurityGroup.
func (mr *MockClientMockRecorder) GetNetworkSecurityGroup(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkSecurityGroup", reflect.TypeOf((*MockClient)(nil).GetNetworkSecurityGroup), ctx, request)
}

// GetRouteTable mocks base method.
func (m *MockClient) GetRouteTable(ctx context.Context, request core.GetRouteTableRequest) (core.GetRouteTableResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRouteTable", ctx, request)
	ret0, _ := ret[0].(core.GetRouteTableResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRouteTable indicates an expected call of GetRouteTable.
func (mr *MockClientMockRecorder) GetRouteTable(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRouteTable", reflect.TypeOf((*MockClient)(nil).GetRouteTable), ctx, request)
}

// GetSecurityList mocks base method.
func (m *MockClient) GetSecurityList(ctx context.Context, request core.GetSecurityListRequest) (core.GetSecurityListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecurityList", ctx, request)
	ret0, _ := ret[0].(core.GetSecurityListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecurityList indicates an expected call of GetSecurityList.
func (mr *MockClientMockRecorder) GetSecurityList(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecurityList", reflect.TypeOf((*MockClient)(nil).GetSecurityList), ctx, request)
}

// GetServiceGateway mocks base method.
func (m *MockClient) GetServiceGateway(ctx context.Context, request core.GetServiceGatewayRequest) (core.GetServiceGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceGateway", ctx, request)
	ret0, _ := ret[0].(core.GetServiceGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceGateway indicates an expected call of GetServiceGateway.
func (mr *MockClientMockRecorder) GetServiceGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceGateway", reflect.TypeOf((*MockClient)(nil).GetServiceGateway), ctx, request)
}

// GetSubnet mocks base method.
func (m *MockClient) GetSubnet(ctx context.Context, request core.GetSubnetRequest) (core.GetSubnetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubnet", ctx, request)
	ret0, _ := ret[0].(core.GetSubnetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSubnet indicates an expected call of GetSubnet.
func (mr *MockClientMockRecorder) GetSubnet(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubnet", reflect.TypeOf((*MockClient)(nil).GetSubnet), ctx, request)
}

// GetVcn mocks base method.
func (m *MockClient) GetVcn(ctx context.Context, request core.GetVcnRequest) (core.GetVcnResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVcn", ctx, request)
	ret0, _ := ret[0].(core.GetVcnResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVcn indicates an expected call of GetVcn.
func (mr *MockClientMockRecorder) GetVcn(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVcn", reflect.TypeOf((*MockClient)(nil).GetVcn), ctx, request)
}

// GetVnic mocks base method.
func (m *MockClient) GetVnic(ctx context.Context, request core.GetVnicRequest) (core.GetVnicResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVnic", ctx, request)
	ret0, _ := ret[0].(core.GetVnicResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVnic indicates an expected call of GetVnic.
func (mr *MockClientMockRecorder) GetVnic(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVnic", reflect.TypeOf((*MockClient)(nil).GetVnic), ctx, request)
}

// ListInternetGateways mocks base method.
func (m *MockClient) ListInternetGateways(ctx context.Context, request core.ListInternetGatewaysRequest) (core.ListInternetGatewaysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListInternetGateways", ctx, request)
	ret0, _ := ret[0].(core.ListInternetGatewaysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListInternetGateways indicates an expected call of ListInternetGateways.
func (mr *MockClientMockRecorder) ListInternetGateways(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListInternetGateways", reflect.TypeOf((*MockClient)(nil).ListInternetGateways), ctx, request)
}

// ListNatGateways mocks base method.
func (m *MockClient) ListNatGateways(ctx context.Context, request core.ListNatGatewaysRequest) (core.ListNatGatewaysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNatGateways", ctx, request)
	ret0, _ := ret[0].(core.ListNatGatewaysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNatGateways indicates an expected call of ListNatGateways.
func (mr *MockClientMockRecorder) ListNatGateways(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNatGateways", reflect.TypeOf((*MockClient)(nil).ListNatGateways), ctx, request)
}

// ListNetworkSecurityGroupSecurityRules mocks base method.
func (m *MockClient) ListNetworkSecurityGroupSecurityRules(ctx context.Context, request core.ListNetworkSecurityGroupSecurityRulesRequest) (core.ListNetworkSecurityGroupSecurityRulesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkSecurityGroupSecurityRules", ctx, request)
	ret0, _ := ret[0].(core.ListNetworkSecurityGroupSecurityRulesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkSecurityGroupSecurityRules indicates an expected call of ListNetworkSecurityGroupSecurityRules.
func (mr *MockClientMockRecorder) ListNetworkSecurityGroupSecurityRules(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSecurityGroupSecurityRules", reflect.TypeOf((*MockClient)(nil).ListNetworkSecurityGroupSecurityRules), ctx, request)
}

// ListNetworkSecurityGroups mocks base method.
func (m *MockClient) ListNetworkSecurityGroups(ctx context.Context, request core.ListNetworkSecurityGroupsRequest) (core.ListNetworkSecurityGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNetworkSecurityGroups", ctx, request)
	ret0, _ := ret[0].(core.ListNetworkSecurityGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNetworkSecurityGroups indicates an expected call of ListNetworkSecurityGroups.
func (mr *MockClientMockRecorder) ListNetworkSecurityGroups(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNetworkSecurityGroups", reflect.TypeOf((*MockClient)(nil).ListNetworkSecurityGroups), ctx, request)
}

// ListRouteTables mocks base method.
func (m *MockClient) ListRouteTables(ctx context.Context, request core.ListRouteTablesRequest) (core.ListRouteTablesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRouteTables", ctx, request)
	ret0, _ := ret[0].(core.ListRouteTablesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRouteTables indicates an expected call of ListRouteTables.
func (mr *MockClientMockRecorder) ListRouteTables(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRouteTables", reflect.TypeOf((*MockClient)(nil).ListRouteTables), ctx, request)
}

// ListSecurityLists mocks base method.
func (m *MockClient) ListSecurityLists(ctx context.Context, request core.ListSecurityListsRequest) (core.ListSecurityListsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSecurityLists", ctx, request)
	ret0, _ := ret[0].(core.ListSecurityListsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSecurityLists indicates an expected call of ListSecurityLists.
func (mr *MockClientMockRecorder) ListSecurityLists(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSecurityLists", reflect.TypeOf((*MockClient)(nil).ListSecurityLists), ctx, request)
}

// ListServiceGateways mocks base method.
func (m *MockClient) ListServiceGateways(ctx context.Context, request core.ListServiceGatewaysRequest) (core.ListServiceGatewaysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceGateways", ctx, request)
	ret0, _ := ret[0].(core.ListServiceGatewaysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceGateways indicates an expected call of ListServiceGateways.
func (mr *MockClientMockRecorder) ListServiceGateways(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceGateways", reflect.TypeOf((*MockClient)(nil).ListServiceGateways), ctx, request)
}

// ListServices mocks base method.
func (m *MockClient) ListServices(ctx context.Context, request core.ListServicesRequest) (core.ListServicesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServices", ctx, request)
	ret0, _ := ret[0].(core.ListServicesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServices indicates an expected call of ListServices.
func (mr *MockClientMockRecorder) ListServices(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServices", reflect.TypeOf((*MockClient)(nil).ListServices), ctx, request)
}

// ListSubnets mocks base method.
func (m *MockClient) ListSubnets(ctx context.Context, request core.ListSubnetsRequest) (core.ListSubnetsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSubnets", ctx, request)
	ret0, _ := ret[0].(core.ListSubnetsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSubnets indicates an expected call of ListSubnets.
func (mr *MockClientMockRecorder) ListSubnets(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSubnets", reflect.TypeOf((*MockClient)(nil).ListSubnets), ctx, request)
}

// ListVcns mocks base method.
func (m *MockClient) ListVcns(ctx context.Context, request core.ListVcnsRequest) (core.ListVcnsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVcns", ctx, request)
	ret0, _ := ret[0].(core.ListVcnsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVcns indicates an expected call of ListVcns.
func (mr *MockClientMockRecorder) ListVcns(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVcns", reflect.TypeOf((*MockClient)(nil).ListVcns), ctx, request)
}

// RemoveNetworkSecurityGroupSecurityRules mocks base method.
func (m *MockClient) RemoveNetworkSecurityGroupSecurityRules(ctx context.Context, request core.RemoveNetworkSecurityGroupSecurityRulesRequest) (core.RemoveNetworkSecurityGroupSecurityRulesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveNetworkSecurityGroupSecurityRules", ctx, request)
	ret0, _ := ret[0].(core.RemoveNetworkSecurityGroupSecurityRulesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemoveNetworkSecurityGroupSecurityRules indicates an expected call of RemoveNetworkSecurityGroupSecurityRules.
func (mr *MockClientMockRecorder) RemoveNetworkSecurityGroupSecurityRules(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveNetworkSecurityGroupSecurityRules", reflect.TypeOf((*MockClient)(nil).RemoveNetworkSecurityGroupSecurityRules), ctx, request)
}

// UpdateInternetGateway mocks base method.
func (m *MockClient) UpdateInternetGateway(ctx context.Context, request core.UpdateInternetGatewayRequest) (core.UpdateInternetGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateInternetGateway", ctx, request)
	ret0, _ := ret[0].(core.UpdateInternetGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateInternetGateway indicates an expected call of UpdateInternetGateway.
func (mr *MockClientMockRecorder) UpdateInternetGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInternetGateway", reflect.TypeOf((*MockClient)(nil).UpdateInternetGateway), ctx, request)
}

// UpdateNatGateway mocks base method.
func (m *MockClient) UpdateNatGateway(ctx context.Context, request core.UpdateNatGatewayRequest) (core.UpdateNatGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNatGateway", ctx, request)
	ret0, _ := ret[0].(core.UpdateNatGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNatGateway indicates an expected call of UpdateNatGateway.
func (mr *MockClientMockRecorder) UpdateNatGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNatGateway", reflect.TypeOf((*MockClient)(nil).UpdateNatGateway), ctx, request)
}

// UpdateNetworkSecurityGroup mocks base method.
func (m *MockClient) UpdateNetworkSecurityGroup(ctx context.Context, request core.UpdateNetworkSecurityGroupRequest) (core.UpdateNetworkSecurityGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSecurityGroup", ctx, request)
	ret0, _ := ret[0].(core.UpdateNetworkSecurityGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSecurityGroup indicates an expected call of UpdateNetworkSecurityGroup.
func (mr *MockClientMockRecorder) UpdateNetworkSecurityGroup(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSecurityGroup", reflect.TypeOf((*MockClient)(nil).UpdateNetworkSecurityGroup), ctx, request)
}

// UpdateNetworkSecurityGroupSecurityRules mocks base method.
func (m *MockClient) UpdateNetworkSecurityGroupSecurityRules(ctx context.Context, request core.UpdateNetworkSecurityGroupSecurityRulesRequest) (core.UpdateNetworkSecurityGroupSecurityRulesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNetworkSecurityGroupSecurityRules", ctx, request)
	ret0, _ := ret[0].(core.UpdateNetworkSecurityGroupSecurityRulesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateNetworkSecurityGroupSecurityRules indicates an expected call of UpdateNetworkSecurityGroupSecurityRules.
func (mr *MockClientMockRecorder) UpdateNetworkSecurityGroupSecurityRules(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNetworkSecurityGroupSecurityRules", reflect.TypeOf((*MockClient)(nil).UpdateNetworkSecurityGroupSecurityRules), ctx, request)
}

// UpdateRouteTable mocks base method.
func (m *MockClient) UpdateRouteTable(ctx context.Context, request core.UpdateRouteTableRequest) (core.UpdateRouteTableResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRouteTable", ctx, request)
	ret0, _ := ret[0].(core.UpdateRouteTableResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRouteTable indicates an expected call of UpdateRouteTable.
func (mr *MockClientMockRecorder) UpdateRouteTable(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRouteTable", reflect.TypeOf((*MockClient)(nil).UpdateRouteTable), ctx, request)
}

// UpdateSecurityList mocks base method.
func (m *MockClient) UpdateSecurityList(ctx context.Context, request core.UpdateSecurityListRequest) (core.UpdateSecurityListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecurityList", ctx, request)
	ret0, _ := ret[0].(core.UpdateSecurityListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSecurityList indicates an expected call of UpdateSecurityList.
func (mr *MockClientMockRecorder) UpdateSecurityList(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecurityList", reflect.TypeOf((*MockClient)(nil).UpdateSecurityList), ctx, request)
}

// UpdateServiceGateway mocks base method.
func (m *MockClient) UpdateServiceGateway(ctx context.Context, request core.UpdateServiceGatewayRequest) (core.UpdateServiceGatewayResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateServiceGateway", ctx, request)
	ret0, _ := ret[0].(core.UpdateServiceGatewayResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateServiceGateway indicates an expected call of UpdateServiceGateway.
func (mr *MockClientMockRecorder) UpdateServiceGateway(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateServiceGateway", reflect.TypeOf((*MockClient)(nil).UpdateServiceGateway), ctx, request)
}

// UpdateSubnet mocks base method.
func (m *MockClient) UpdateSubnet(ctx context.Context, request core.UpdateSubnetRequest) (core.UpdateSubnetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSubnet", ctx, request)
	ret0, _ := ret[0].(core.UpdateSubnetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateSubnet indicates an expected call of UpdateSubnet.
func (mr *MockClientMockRecorder) UpdateSubnet(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSubnet", reflect.TypeOf((*MockClient)(nil).UpdateSubnet), ctx, request)
}

// UpdateVcn mocks base method.
func (m *MockClient) UpdateVcn(ctx context.Context, request core.UpdateVcnRequest) (core.UpdateVcnResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVcn", ctx, request)
	ret0, _ := ret[0].(core.UpdateVcnResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateVcn indicates an expected call of UpdateVcn.
func (mr *MockClientMockRecorder) UpdateVcn(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVcn", reflect.TypeOf((*MockClient)(nil).UpdateVcn), ctx, request)
}
