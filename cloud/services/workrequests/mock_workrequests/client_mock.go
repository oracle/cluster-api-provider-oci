// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mock_containerengine is a generated GoMock package.
package mock_workrequests

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	wr "github.com/oracle/oci-go-sdk/v65/workrequests"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// ListWorkRequests mocks base method.
func (m *MockClient) ListWorkRequests(ctx context.Context, request wr.ListWorkRequestsRequest) (wr.ListWorkRequestsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWorkRequests", ctx, request)
	ret0, _ := ret[0].(wr.ListWorkRequestsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWorkRequests indicates an expected call of ListWorkRequests.
func (mr *MockClientMockRecorder) ListWorkRequests(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWorkRequests", reflect.TypeOf((*MockClient)(nil).ListWorkRequests), ctx, request)
}

// ListWorkRequestErrors mocks base method.
func (m *MockClient) ListWorkRequestErrors(ctx context.Context, request wr.ListWorkRequestErrorsRequest) (wr.ListWorkRequestErrorsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWorkRequestErrors", ctx, request)
	ret0, _ := ret[0].(wr.ListWorkRequestErrorsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWorkRequestErrors indicates an expected call of ListWorkRequestErrors.
func (mr *MockClientMockRecorder) ListWorkRequestErrors(ctx, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWorkRequestErrors", reflect.TypeOf((*MockClient)(nil).ListWorkRequestErrors), ctx, request)
}
