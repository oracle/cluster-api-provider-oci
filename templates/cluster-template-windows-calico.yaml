apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
    cni: calico
    csi-proxy: enabled
    windows: enabled
  name: "${CLUSTER_NAME}"
  namespace: "${NAMESPACE}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - ${POD_CIDR:="192.168.0.0/16"}
    serviceDomain: ${SERVICE_DOMAIN:="cluster.local"}
    services:
      cidrBlocks:
        - ${SERVICE_CIDR:="10.128.0.0/12"}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: OCICluster
    name: "${CLUSTER_NAME}"
    namespace: "${NAMESPACE}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "${CLUSTER_NAME}-control-plane"
    namespace: "${NAMESPACE}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCICluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
  name: "${CLUSTER_NAME}"
spec:
  compartmentId: "${OCI_COMPARTMENT_ID}"
  networkSpec:
    vcn:
      name: ${CLUSTER_NAME}
      cidr: "10.0.0.0/16"
      networkSecurityGroup:
        list:
          - name: control-plane-endpoint
            role: control-plane-endpoint
            egressRules:
              - egressRule:
                  isStateless: false
                  destination: "10.0.0.0/29"
                  protocol: "6"
                  destinationType: "CIDR_BLOCK"
                  description: "Kubernetes API traffic to Control Plane"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
            ingressRules:
              - ingressRule:
                  isStateless: false
                  source: "0.0.0.0/0"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "External access to Kubernetes API endpoint"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/16"
                  protocol: "1"
                  sourceType: "CIDR_BLOCK"
                  description: "Path discovery"
                  icmpOptions:
                    code: 4
                    type: 3
          - name: control-plane
            role: control-plane
            egressRules:
              - egressRule:
                  isStateless: false
                  destination: "0.0.0.0/0"
                  protocol: "all"
                  destinationType: "CIDR_BLOCK"
                  description: "Control Plane access to Internet"
            ingressRules:
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.8/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Kubernetes API endpoint to Control Plane(apiserver port)"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Control plane node to Control Plane(apiserver port) communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  isStateless: false
                  source: "10.0.64.0/20"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Worker Node to Control Plane(apiserver port) communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "etcd client communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 2379
                      min: 2379
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "etcd peer"
                  tcpOptions:
                    destinationPortRange:
                      max: 2380
                      min: 2380
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/16"
                  protocol: "1"
                  sourceType: "CIDR_BLOCK"
                  description: "Path discovery"
                  icmpOptions:
                    code: 4
                    type: 3
              - ingressRule:
                  isStateless: false
                  source: "0.0.0.0/0"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Inbound SSH traffic to Control Plane"
                  tcpOptions:
                    destinationPortRange:
                      max: 22
                      min: 22
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Control Plane to Control Plane Kubelet Communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 10250
                      min: 10250
              - ingressRule:
                  isStateless: false
                  source: "10.0.64.0/20"
                  protocol: "17"
                  sourceType: "CIDR_BLOCK"
                  description: "Calico VXLAN"
                  udpOptions:
                    destinationPortRange:
                      max: 4789
                      min: 4789
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "17"
                  sourceType: "CIDR_BLOCK"
                  description: "Calico VXLAN"
                  udpOptions:
                    destinationPortRange:
                      max: 4789
                      min: 4789
          - name: worker
            role: worker
            egressRules:
              - egressRule:
                  isStateless: false
                  destination: "0.0.0.0/0"
                  protocol: "all"
                  destinationType: "CIDR_BLOCK"
                  description: "Worker node access to Internet"
            ingressRules:
              - ingressRule:
                  isStateless: false
                  source: "0.0.0.0/0"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Inbound SSH traffic to worker node"
                  tcpOptions:
                    destinationPortRange:
                      max: 22
                      min: 22
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/16"
                  protocol: "1"
                  sourceType: "CIDR_BLOCK"
                  description: "Path discovery"
                  icmpOptions:
                    code: 4
                    type: 3
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Control Plane to worker node Kubelet Communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 10250
                      min: 10250
              - ingressRule:
                  isStateless: false
                  source: "10.0.64.0/20"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Worker node to worker node Kubelet Communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 10250
                      min: 10250
              - ingressRule:
                  isStateless: false
                  source: "10.0.64.0/20"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Worker node to default NodePort ingress communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 32767
                      min: 30000
              - ingressRule:
                  isStateless: false
                  source: "10.0.64.0/20"
                  protocol: "17"
                  sourceType: "CIDR_BLOCK"
                  description: "Calico VXLAN"
                  udpOptions:
                    destinationPortRange:
                      max: 4789
                      min: 4789
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/29"
                  protocol: "17"
                  sourceType: "CIDR_BLOCK"
                  description: "Calico VXLAN"
                  udpOptions:
                    destinationPortRange:
                      max: 4789
                      min: 4789
          - name: service-lb
            role: service-lb
            egressRules:
              - egressRule:
                  isStateless: false
                  destination: "10.0.64.0/20"
                  protocol: "6"
                  destinationType: "CIDR_BLOCK"
                  description: "Service LoadBalancer to default NodePort egress communication"
                  tcpOptions:
                    destinationPortRange:
                      max: 32767
                      min: 30000
            ingressRules:
              - ingressRule:
                  isStateless: false
                  source: "10.0.0.0/16"
                  protocol: "1"
                  sourceType: "CIDR_BLOCK"
                  description: "Path discovery"
                  icmpOptions:
                    code: 4
                    type: 3
              - ingressRule:
                  isStateless: false
                  source: "0.0.0.0/0"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Accept http traffic on port 80"
                  tcpOptions:
                    destinationPortRange:
                      max: 80
                      min: 80
              - ingressRule:
                  isStateless: false
                  source: "0.0.0.0/0"
                  protocol: "6"
                  sourceType: "CIDR_BLOCK"
                  description: "Accept http traffic on port 443"
                  tcpOptions:
                    destinationPortRange:
                      max: 443
                      min: 443
      subnets:
        - name: control-plane-endpoint
          role: control-plane-endpoint
          cidr: "10.0.0.8/29"
          type: public
        - name: control-plane
          role: control-plane
          cidr: "10.0.0.0/29"
          type: private
        - name: service-lb
          role: service-lb
          cidr: "10.0.0.32/27"
          type: public
        - name: worker
          role: worker
          cidr: "10.0.64.0/20"
          type: private
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
  namespace: "${NAMESPACE}"
spec:
  version: "${KUBERNETES_VERSION}"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: OCIMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: "${CLUSTER_NAME}-control-plane"
      namespace: "${NAMESPACE}"
  kubeadmConfigSpec:
    clusterConfiguration:
      kubernetesVersion: ${KUBERNETES_VERSION}
      apiServer:
        certSANs: [localhost, 127.0.0.1]
        extraArgs:
          cloud-provider: oci
      dns: {}
      etcd: {}
      networking: {}
      scheduler: {}
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{ ds["id"] }}
    joinConfiguration:
      discovery: {}
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{ ds["id"] }}
---
kind: OCIMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      imageId: "${OCI_CONTROL_PLANE_IMAGE_ID}"
      compartmentId: "${OCI_COMPARTMENT_ID}"
      shape: "${OCI_CONTROL_PLANE_MACHINE_TYPE=VM.Standard.E4.Flex}"
      shapeConfig:
        ocpus: "${OCI_CONTROL_PLANE_MACHINE_TYPE_OCPUS=1}"
      metadata:
        ssh_authorized_keys: "${OCI_SSH_KEY}"
      isPvEncryptionInTransitEnabled: ${OCI_CONTROL_PLANE_PV_TRANSIT_ENCRYPTION=true}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-md-win"
spec:
  template:
    spec:
      imageId: "${OCI_NODE_IMAGE_ID}"
      compartmentId: "${OCI_COMPARTMENT_ID}"
      shape: "${OCI_NODE_MACHINE_TYPE=VM.Standard.E4.Flex}"
      shapeConfig:
        ocpus: "${OCI_NODE_MACHINE_TYPE_OCPUS=1}"
      vnicAttachments:
        - displayName: "CalicoNic"
          nicIndex: 1 # second nic must be used for hyper-v
      metadata:
        ssh_authorized_keys: "${OCI_SSH_KEY}"
      isPvEncryptionInTransitEnabled: ${OCI_NODE_PV_TRANSIT_ENCRYPTION=true}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-md-win"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          criSocket: npipe:////./pipe/containerd-containerd
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: oci://{{ ds.meta_data["instance_id"] }}
            feature-gates: WindowsHostProcessContainers=true
            v: "2"
            windows-priorityclass: ABOVE_NORMAL_PRIORITY_CLASS
          name: '{{ ds.meta_data["local_hostname"] }}'
      preKubeadmCommands:
        - powershell C:\Windows\Setup\Scripts\enable_second_nic.ps1
        - powershell C:\Users\opc\attach_secondary_vnic.ps1 > C:\Users\opc\attach_secondary_vnic_log.txt
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-win"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${NODE_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-win"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-win"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: OCIMachineTemplate