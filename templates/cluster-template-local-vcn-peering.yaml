apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
  name: "${CLUSTER_NAME}"
  namespace: "${NAMESPACE}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - ${POD_CIDR:="192.168.0.0/16"}
    serviceDomain: ${SERVICE_DOMAIN:="cluster.local"}
    services:
      cidrBlocks:
        - ${SERVICE_CIDR:="10.128.0.0/12"}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: OCICluster
    name: "${CLUSTER_NAME}"
    namespace: "${NAMESPACE}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "${CLUSTER_NAME}-control-plane"
    namespace: "${NAMESPACE}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCICluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
  name: "${CLUSTER_NAME}"
spec:
  compartmentId: "${OCI_COMPARTMENT_ID}"
  networkSpec:
    vcnPeering:
      drg:
        id: "${DRG_ID}"
      # The CIDR ranges specified below will be added to the workload cluster VCN
      # with the target as DRG. This route rule will make sure that traffic to management
      # cluster VCN will be directed to the DRG.
      peerRouteRules:
        # This is typically the CIDR range of management cluster VCN or a sub range of the same
        - vcnCIDRRange: "10.0.0.0/16"
    vcn:
      cidr: "10.1.0.0/16"
      networkSecurityGroup:
        list:
          - egressRules:
              - egressRule:
                  description: Kubernetes API traffic to Control Plane
                  destination: 10.1.0.0/29
                  destinationType: CIDR_BLOCK
                  isStateless: false
                  protocol: "6"
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
            ingressRules:
              - ingressRule:
                  description: External access to Kubernetes API endpoint
                  isStateless: false
                  protocol: "6"
                  source: 0.0.0.0/0
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  description: Path discovery
                  icmpOptions:
                    code: 3
                    type: 3
                  isStateless: false
                  protocol: "1"
                  source: 10.1.0.0/16
                  sourceType: CIDR_BLOCK
            name: control-plane-endpoint
            role: control-plane-endpoint
          - egressRules:
              - egressRule:
                  description: Control Plane access to Internet
                  destination: 0.0.0.0/0
                  destinationType: CIDR_BLOCK
                  isStateless: false
                  protocol: all
            ingressRules:
              - ingressRule:
                  description: Kubernetes API endpoint to Control Plane(apiserver port)
                    communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.8/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  description: Control plane node to Control Plane(apiserver port) communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  description: Worker Node to Control Plane(apiserver port) communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 6443
                      min: 6443
              - ingressRule:
                  description: etcd client communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 2379
                      min: 2379
              - ingressRule:
                  description: etcd peer
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 2380
                      min: 2380
              - ingressRule:
                  description: Calico networking (BGP)
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 179
                      min: 179
              - ingressRule:
                  description: Calico networking (BGP)
                  isStateless: false
                  protocol: "6"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 179
                      min: 179
              - ingressRule:
                  description: Calico networking with IP-in-IP enabled
                  isStateless: false
                  protocol: "4"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Calico networking with IP-in-IP enabled
                  isStateless: false
                  protocol: "4"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Path discovery
                  icmpOptions:
                    code: 3
                    type: 3
                  isStateless: false
                  protocol: "1"
                  source: 10.1.0.0/16
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Inbound SSH traffic to Control Plane
                  isStateless: false
                  protocol: "6"
                  source: 0.0.0.0/0
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 22
                      min: 22
            name: control-plane
            role: control-plane
          - egressRules:
              - egressRule:
                  description: Worker node access to Internet
                  destination: 0.0.0.0/0
                  destinationType: CIDR_BLOCK
                  isStateless: false
                  protocol: all
                id: C2F829
            ingressRules:
              - ingressRule:
                  description: Inbound SSH traffic to worker node
                  isStateless: false
                  protocol: "6"
                  source: 0.0.0.0/0
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 22
                      min: 22
              - ingressRule:
                  description: Path discovery
                  icmpOptions:
                    code: 3
                    type: 3
                  isStateless: false
                  protocol: "1"
                  source: 10.1.0.0/16
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Control Plane to worker node Kubelet Communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 10250
                      min: 10250
              - ingressRule:
                  description: Worker node to worker node Kubelet Communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 10250
                      min: 10250
              - ingressRule:
                  description: Calico networking (BGP)
                  isStateless: false
                  protocol: "6"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 179
                      min: 179
              - ingressRule:
                  description: Calico networking (BGP)
                  isStateless: false
                  protocol: "6"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 179
                      min: 179
              - ingressRule:
                  description: Calico networking with IP-in-IP enabled
                  isStateless: false
                  protocol: "4"
                  source: 10.1.0.0/29
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Calico networking with IP-in-IP enabled
                  isStateless: false
                  protocol: "4"
                  source: 11.0.64.0/20
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Worker node to default NodePort ingress communication
                  isStateless: false
                  protocol: "6"
                  source: 10.1.64.0/20
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 32767
                      min: 30000
            name: worker
            role: worker
          - egressRules:
              - egressRule:
                  description: Service LoadBalancer to default NodePort egress communication
                  destination: 10.1.64.0/20
                  destinationType: CIDR_BLOCK
                  isStateless: false
                  protocol: "6"
                  tcpOptions:
                    destinationPortRange:
                      max: 32767
                      min: 30000
            ingressRules:
              - ingressRule:
                  description: Path discovery
                  icmpOptions:
                    code: 3
                    type: 3
                  isStateless: false
                  protocol: "1"
                  source: 10.1.0.0/16
                  sourceType: CIDR_BLOCK
              - ingressRule:
                  description: Accept http traffic on port 80
                  isStateless: false
                  protocol: "6"
                  source: 0.0.0.0/0
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 80
                      min: 80
              - ingressRule:
                  description: Accept https traffic on port 443
                  isStateless: false
                  protocol: "6"
                  source: 0.0.0.0/0
                  sourceType: CIDR_BLOCK
                  tcpOptions:
                    destinationPortRange:
                      max: 443
                      min: 443
            name: service-lb
            role: service-lb
      subnets:
        - cidr: 10.1.0.8/29
          name: control-plane-endpoint
          role: control-plane-endpoint
          type: private
        - cidr: 10.1.0.0/29
          name: control-plane
          role: control-plane
          type: private
        - cidr: 10.1.0.32/27
          name: service-lb
          role: service-lb
          type: public
        - cidr: 10.1.64.0/20
          name: worker
          role: worker
          type: private
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "${CLUSTER_NAME}-control-plane"
  namespace: "${NAMESPACE}"
spec:
  version: "${KUBERNETES_VERSION}"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: OCIMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: "${CLUSTER_NAME}-control-plane"
      namespace: "${NAMESPACE}"
  kubeadmConfigSpec:
    clusterConfiguration:
      kubernetesVersion: ${KUBERNETES_VERSION}
      apiServer:
        certSANs: [localhost, 127.0.0.1]
      dns: {}
      etcd: {}
      networking: {}
      scheduler: {}
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{ ds["id"] }}
    joinConfiguration:
      discovery: {}
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{ ds["id"] }}
---
kind: OCIMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      imageId: "${OCI_IMAGE_ID}"
      compartmentId: "${OCI_COMPARTMENT_ID}"
      shape: "${OCI_SHAPE}"
      shapeConfig:
        ocpus: "${OCI_SHAPE_OCPUS}"
        memoryInGBs: "${OCI_SHAPE_MEMORY_IN_GBS}"
      metadata:
        ssh_authorized_keys: "${OCI_SSH_KEY}"
      isPvEncryptionInTransitEnabled: ${OCI_PV_TRANSIT_ENCRYPTION=true}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      imageId: "${OCI_IMAGE_ID}"
      compartmentId: "${OCI_COMPARTMENT_ID}"
      shape: "${OCI_SHAPE}"
      shapeConfig:
        ocpus: "${OCI_SHAPE_OCPUS}"
        memoryInGBs: "${OCI_SHAPE_MEMORY_IN_GBS}"
      metadata:
        ssh_authorized_keys: "${OCI_SSH_KEY}"
      isPvEncryptionInTransitEnabled: ${OCI_PV_TRANSIT_ENCRYPTION=true}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: oci://{{ ds["id"] }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${NODE_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "${CLUSTER_NAME}"
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: OCIMachineTemplate